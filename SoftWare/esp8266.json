esphome:
  name: pwm-lamp

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "b4sti5dHy0J7/F1AuJn7haFqFies6ldH5wWtRRw0mhM="

ota:
  password: "aa9ddcfcd6a7be9a7d402856b49d0bad"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Pwm-Lamp Fallback Hotspot"
    password: "WDRWveLLay4G"

captive_portal:

# Example configuration entry for ESP32
i2c:
  sda: GPIO4
  scl: GPIO5
  scan: true
#  id: bus_a

display:
  - platform: lcd_pcf8574
    dimensions: 20x4
    address: 0x27
    lambda: |-
      it.print("Hello World!");

pcf8574:
  - id: 'pcf8574_hub'
    address: 0x20
    pcf8575: false

# Individual outputs
switch:
  - platform: gpio
    name: "On/Off RELE out"
    id: rele_on_off
    pin:
      pcf8574: pcf8574_hub
      # Use pin number 5
      number: 5
      # One of INPUT or OUTPUT
      mode:
        output: true
      inverted: false
  - platform: template
    optimistic: true
    id: move_swi #In night mode move detected
  - platform: template
    optimistic: true
    id: on_off_mode #ON or OF state for lamp
    name: "STATE"

output:
  - platform: esp8266_pwm
    pin: 
      number: GPIO12
      inverted: true  
    frequency: 10000
    id: gpio_pwm
light:
  - platform: monochromatic
    output: gpio_pwm
    id: LED1
    name: "LED2"
    restore_mode: ALWAYS_OFF
# PWM LED end section   

number:
  - platform: template
    name: "Brightness"
    optimistic: true
    min_value: 0
    max_value: 100
    step: 5
    initial_value: 30
    id: lamp_brightness

  - platform: template
    name: "SaveBrightness"
    optimistic: true
    min_value: 0
    max_value: 100
    step: 5
    initial_value: 30
    id: save_lamp_brightness

binary_sensor:
  - platform: gpio
    id: "PIR_IN"
    name: "Move"
    pin:
      pcf8574: pcf8574_hub
      # Use pin number 4
      number: 4
      # One of INPUT or OUTPUT
      mode:
        input: true
      inverted: true    
    on_press:
      then: 
       - if:  
          condition:  
            - binary_sensor.is_on: Night_mode 
            - switch.is_on: on_off_mode
            - switch.is_off: move_swi
          then: 
            - switch.template.publish:
               id: move_swi
               state: ON
            - light.turn_on: 
                 id: LED1  
                 brightness: 90%               
            - delay: 20s
            - switch.template.publish:
               id: move_swi
               state: OFF
            - light.turn_on: 
                id: LED1 
                brightness: 30%            
  - platform: gpio
    id: "Night_mode"
    name: "Night mode"
    pin:
      pcf8574: pcf8574_hub
      # Use pin number 3
      number: 3
      # One of INPUT or OUTPUT
      mode:
        input: true
      inverted: true        
    on_press:
      then: 
       - if:  
          condition:  
            #- light.is_off: LED1 
            - switch.is_on: on_off_mode  # Lamp is on, can use night mode
          then: 
            # need save previosly set brightness TODO
             - number.set: 
                 id: save_lamp_brightness
                 value: !lambda |-
                   return id(lamp_brightness).state;
             - light.turn_on: 
                 id: LED1  
                 brightness: 30%
    on_release:
      then:
       #TODO need restore brightness
       - if:  
          condition:  
            #- light.is_off: LED1 
            - switch.is_on: on_off_mode  # Lamp is on, leave it ON after night
          then: 
            # need restore previosly set brightness TODO
            - light.turn_on: 
                 id: LED1  
                 brightness: !lambda |-
                   return id(save_lamp_brightness).state/100.0;
  - platform: gpio
    id: "LED_On_Off"
    pin: 
      pcf8574: pcf8574_hub
      # Use pin number 0
      number: 0
      # One of INPUT or OUTPUT
      mode:
        input: true
      inverted: true
    filters:
      delayed_on_off: 100ms
    on_press:
      then: 
       - if:  
          condition:  
            - light.is_off: LED1 
          then: 
             - switch.template.publish:
                id: on_off_mode
                state: ON
             - light.turn_on: 
                 id: LED1  
                 brightness: !lambda |-
                  return id(lamp_brightness).state/100.0;
       - if:  
          condition:  
            - light.is_on: LED1 
          then: 
            - switch.template.publish:
               id: on_off_mode
               state: OFF          
            - light.turn_off: 
                id: LED1   
  - platform: gpio
    id: key_up
    pin:
      pcf8574: pcf8574_hub
      # Use pin number 1
      number: 1
      # One of INPUT or OUTPUT
      mode:
        input: true
      inverted: true
    on_press:
      - while:
          condition:   
            - binary_sensor.is_on: key_up
            - light.is_on: LED1
            - number.in_range:
                id: lamp_brightness
                above: 5.0
                below: 95.0
          then:
            - number.increment: lamp_brightness
            - light.turn_on:
                id: LED1
                brightness: !lambda |-
                  return id(lamp_brightness).state/100.0;
                transition_length: 0.5s
            - delay: 0.5s          
  - platform: gpio
    id: key_down
    pin:
      pcf8574: pcf8574_hub
      # Use pin number 2
      number: 2
      # One of INPUT or OUTPUT
      mode:
        input: true
      inverted: true
    on_press:
      - while:
          condition:   
            - binary_sensor.is_on: key_down
            - light.is_on: LED1
            - number.in_range:
                id: lamp_brightness
                above: 10.0
                below: 100.0            
          then:
            - number.decrement: lamp_brightness
            - light.turn_on:
                id: LED1
                brightness: !lambda |-
                  return id(lamp_brightness).state/100.0;
                transition_length: 0.5s
            - delay: 0.5s          
