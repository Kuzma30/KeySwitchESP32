esphome:
  name: lamp-dimmer

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "e+t6+u706nNayn2VhWJ4n3XAlzi/YjfNq0XXb5lNFaU="

ota:
  password: "b83664d0b2d9ad3941b9594cb324e86d"

wifi:
  ssid: "HA"
  password: "88888888"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Lamp-Dimmer Fallback Hotspot"
    password: "hnLrqxoUVUpc"

captive_portal:

switch:
  - platform: gpio
    pin: 10 #    name: "LED On/Off"
    id: led_on_off
  - platform: template
    optimistic: true
    id: move_swi #In night mode move detected
  - platform: template
    optimistic: true
    id: on_off_mode #ON or OF state for lamp
    name: "STATE"
# PWM LED    
output:
  - platform: esp8266_pwm
    pin: 16
    frequency: 1000
    id: gpio_16
light:
  - platform: monochromatic
    output: gpio_16
    id: LED1
    name: "LED2"
    restore_mode: ALWAYS_OFF
# PWM LED end section   

number:
  - platform: template
    name: "Brightness"
    optimistic: true
    min_value: 0
    max_value: 100
    step: 5
    initial_value: 30
    id: lamp_brightness

  - platform: template
    name: "SaveBrightness"
    optimistic: true
    min_value: 0
    max_value: 100
    step: 5
    initial_value: 30
    id: save_lamp_brightness

binary_sensor:
  - platform: gpio
    id: "PIR_IN"
    name: "Move"
    pin: 
      number: 5
      inverted: true      
      mode:
        input: true
        pullup: true
    on_press:
      then: 
       - if:  
          condition:  
            - binary_sensor.is_on: Night_mode 
            - switch.is_on: on_off_mode
            - switch.is_off: move_swi
          then: 
            - switch.template.publish:
               id: move_swi
               state: ON
            - light.turn_on: 
                 id: LED1  
                 brightness: 90%               
            - delay: 20s
            - switch.template.publish:
               id: move_swi
               state: OFF
            - light.turn_on: 
                id: LED1 
                brightness: 30%            
  - platform: gpio
    id: "Night_mode"
    name: "Night mode"
    pin: 
      number: 10
      mode:
        input: true
    on_press:
      then: 
       - if:  
          condition:  
            #- light.is_off: LED1 
            - switch.is_on: on_off_mode  # Lamp is on, can use night mode
          then: 
            # need save previosly set brightness TODO
             - number.set: 
                 id: save_lamp_brightness
                 value: !lambda |-
                   return id(lamp_brightness).state;
             - light.turn_on: 
                 id: LED1  
                 brightness: 30%
    on_release:
      then:
       #TODO need restore brightness
       - if:  
          condition:  
            #- light.is_off: LED1 
            - switch.is_on: on_off_mode  # Lamp is on, leave it ON after night
          then: 
            # need restore previosly set brightness TODO
            - light.turn_on: 
                 id: LED1  
                 brightness: !lambda |-
                   return id(save_lamp_brightness).state/100.0;
  - platform: gpio
    id: "LED_On_Off"
    pin: 
      number: 12
      inverted: true
      mode:
        input: true
        pullup: true
    filters:
      delayed_on_off: 100ms
    on_press:
      then: 
       - if:  
          condition:  
            - light.is_off: LED1 
          then: 
             - switch.template.publish:
                id: on_off_mode
                state: ON
             - light.turn_on: 
                 id: LED1  
                 brightness: !lambda |-
                  return id(lamp_brightness).state/100.0;
       - if:  
          condition:  
            - light.is_on: LED1 
          then: 
            - switch.template.publish:
               id: on_off_mode
               state: OFF          
            - light.turn_off: 
                id: LED1   
  - platform: gpio
    id: key_up
    pin:
      number: 13
      inverted: true
      mode:
        input: true
        pullup: true
    on_press:
      - while:
          condition:   
            - binary_sensor.is_on: key_up
            - light.is_on: LED1
            - number.in_range:
                id: lamp_brightness
                above: 5.0
                below: 95.0
          then:
            - number.increment: lamp_brightness
            - light.turn_on:
                id: LED1
                brightness: !lambda |-
                  return id(lamp_brightness).state/100.0;
                transition_length: 0.1s
            - delay: 0.1s          
  - platform: gpio
    id: key_down
    pin: 
      number: 14
      inverted: true
      mode:
        input: true
        pullup: true
    on_press:
      - while:
          condition:   
            - binary_sensor.is_on: key_down
            - light.is_on: LED1
            - number.in_range:
                id: lamp_brightness
                above: 10.0
                below: 100.0            
          then:
            - number.decrement: lamp_brightness
            - light.turn_on:
                id: LED1
                brightness: !lambda |-
                  return id(lamp_brightness).state/100.0;
                transition_length: 0.1s
            - delay: 0.1s          
